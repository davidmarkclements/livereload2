// Generated by CoffeeScript 1.3.3
(function() {
  var fs, runner, _;

  fs = require('fs');

  _ = require('underscore');

  runner = function() {
    var config, livereload, opts, path, resolve, server, _ref;
    livereload = require('./livereload');
    resolve = require('path').resolve;
    opts = require('opts');
    opts.parse([
      {
        short: "p",
        long: "port",
        description: "Specify the port",
        value: true,
        required: false
      }, {
        short: "c",
        long: "config",
        description: "Specify the JSON config file",
        value: true,
        required: false
      }, {
        short: "d",
        long: "delay",
        description: "Specify the wait delay (before refresh).",
        value: true,
        required: false
      }, {
        short: "w",
        long: "watch",
        description: "Specify wether to watch directories (default: true).",
        value: true,
        required: false
      }
    ].reverse(), true);
    config = {};
    if (opts.get('config') != null) {
      config = JSON.parse(fs.readFileSync(opts.get('config')));
    }
    config.port = opts.get('port') || config.port;
    config.delay = opts.get('delay') || config.delay;
    config.watch = _.find([opts.get('watch'), config.watch, true], (function(el) {
      return el != null;
    }));
    if (typeof config.watch === 'string') {
      config.watch = config.watch === 'true';
    }
    if ((_ref = config.debug) == null) {
      config.debug = true;
    }
    server = livereload.createServer(config);
    path = resolve(opts.args()[0] || '.');
    console.log("Started LiveReload on port " + server.config.port);
    if (config.watch) {
      server.watch(path);
      return console.log("LiveReload is watching " + path);
    }
  };

  module.exports = {
    run: runner
  };

}).call(this);
